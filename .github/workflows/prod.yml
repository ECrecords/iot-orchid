name: Build, Test and Deplay to Prod

on:
  push:
    branches:
      - main

env:
  SQLX_OFFLINE: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Build and Test Code
      run: |
        cargo build --verbose
        cargo test --verbose

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2.3.0
      with:
        tags: ${{ secrets.DOCKER_USERNAME }}/iot-orchid:v0.1-alpha
        push: true
    
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Install sshpass
      run: sudo apt-get install sshpass
    
    - name: Copy docker-compose.yml to Droplet
      env:
        SSHPASS: ${{ secrets.DROPLET_PASSWORD }}
      run: |
        sshpass -e scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ secrets.DROPLET_IP }}:~

    - name: Copy Migrations Directory to Droplet
      env:
        SSHPASS: ${{ secrets.DROPLET_PASSWORD }}
      run: |
        sshpass -e scp -o StrictHostKeyChecking=no -r ./migrations root@${{ secrets.DROPLET_IP }}:~

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          export JWT_SECRET=${{ secrets.JWT_SECRET }}
          export IOT_ORCHID_ADDRESS=${{ env.IOT_ORCHID_ADDRESS }}
          export IOT_ORCHID_PORT=${{ env.IOT_ORCHID_PORT }}
          cd ~
          docker-compose down
          docker-compose up -d
