version: '3'
services:
  # api:
  #   image: ecrecords/iot-orchid:v0.1-alpha
  #   restart: unless-stopped
  #   environment:
  #     DATABASE_URL: "postgres://postgres:${POSTGRES_PASSWORD}@db:5432"
  #     IOT_ORCHID_PORT: ${IOT_ORCHID_PORT}
  #     IOT_ORCHID_ADDRESS: ${IOT_ORCHID_ADDRESS}
  #     JWT_SECRET: ${JWT_SECRET}
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - db
  #     - mqtt

  db:
    image: postgres:15.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  mqtt:
    image: eclipse-mosquitto:2.0.18
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - iot-orchid-network

  rabbitmq:
    image: rabbitmq:3.13-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"

    networks:
      - iot-orchid-network

  registration-handler:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime-registration-handler
    environment:
      - AMQP_URI=amqp://guest:guest@rabbitmq:5672
      - QUEUE_NAME=registration-requests
    networks:
      - iot-orchid-network
    deploy:
      replicas: 4
    depends_on:
      - rabbitmq
      - mqtt

  registration-listener:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime-registration-listener
    environment:
      - AMPQ_URI=amqp://guest:guest@rabbitmq:5672
      - MQTT_URI=tcp://mqtt:1883
    networks:
      - iot-orchid-network
    depends_on:
      - rabbitmq
      - mqtt 
      

volumes:
  db:
  
networks:
  iot-orchid-network:
    driver: bridge

